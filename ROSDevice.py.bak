import json
import threading
import types
import ipaddress
from librouteros import connect
from librouteros.query import Key

class Keys:
    id = Key(".id")
    rid = Key("id")
    name = Key("name")
    mac = Key("mac-address")
    comment = Key("comment")
    interface = Key("interface")
    interfaces = Key("interfaces")
    address = Key("address")
    inactive = Key("inactive")
    area = Key("area")
    type = Key("type")
    passive = Key("passive")

class ROSDevice(threading.Thread):

    def __init__(self, tid, dev, netbox):
        threading.Thread.__init__(self)
        self.threadID = tid
        self.name = dev.name
        self.dev = dev
        self.nb = netbox
        self.tags = self.getNBTags()
    def run(self):
        api_ip = self.dev.primary_ip4.address.split("/")[0]
        api = connect(username="svc.netbox", password="Passw0rd", host=api_ip)

        
        
        for nbi in self.nb.dcim.interfaces.filter(device=self.dev):
            int_exists = 0
            
            